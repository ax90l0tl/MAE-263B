
clc
close all
clear

L1 = linspace(0, 500, 51);
L2 = linspace(0, 500, 51);

d = 200;

w = linspace(0, 140, 15) + d;
h = linspace(-50, 50, 11);

dw = 15;
dh = 11;


for i = 1:1:51
    for j = 1:1:51
        if L1(i)^2 + L2(j)^2 < (d+w(end))^2 + (h(end)/2)^2
            continue
        else
            optimize(L1(i), L2(j), w, h, dw, dh);
        end
    end
end


function C = optimize(L1, L2, w, h, dw, dh);

syms t1 t2
T_0_1 = trotx(0)*transl(0, 0, 0)*trotz(t1)*transl(0, 0, 0);
T_1_2 = trotx(0)*transl(L1, 0, 0)*trotz(t2)*transl(0, 0, 0);
T_2_tool = trotx(0)*transl(L2, 0, 0)*trotz(0)*transl(0, 0, 0);
T_0_2 = simplify(T_0_1*T_1_2*T_2_tool);

T_all(:,:,1) = T_0_1;
T_all(:,:,2) = T_1_2;
T_all(:,:,3) = T_0_2;
size(T_all);

J_exp = sym(zeros(6, 3));
P_0_2 = T_0_2(1:3, end);
J_exp(1:3, 1) = cross(T_all(1:3, end-1, 1), P_0_2 - T_0_1(1:3, end));
J_exp(1:3, 2) = cross(T_all(1:3, end-1, 2), P_0_2 - T_0_2(1:3, end));
J_exp(4:end, 1) = T_all(1:3, end-1, 1);
J_exp(4:end, 2) = T_all(1:3, end-1, 2);

J_exp = simplify(J_exp)
pretty(J_exp)
J_square = J_exp([1:2, end], :);
sing = simplify(det(J_square))

k = zeros(1, dw*dh);
for i = 1:1:dh
    for j = 1:1:dw
        w(i), h(j)
        joint_angles = ik(L1, L2, [w(i), h(j)])
        lambda = eig(subs(J_square, [t1, t2], [0, 0]));
        k((i-1)*(dw)+j) = sqrt(min(lambda)/max(lambda));
    end
end

c = sum(k);
b = min(k);
a = L1^3 + L2^3;

C = [(c*b/a), L1, L2];
end

function joint_angles = ik(L1, L2, pt)
    theta = atan2(pt(2), pt(1));
    dist = pt(1)^2 + pt(2)^2
    c_t2 = (L1^2 + L2^2 - dist)/(2*L1*L2)
    s_t2 = sqrt(1-c_t2^2)
    t2 = atan2(s_t2, c_t2);
    t2_alt = atan2(-s_t2, c_t2);
    s_t1 = (L2/sqrt(dist))*s_t2;
    c_t1 = sqrt(1-s_t1^2);
    t1 = atan2(s_t1, c_t1) + theta;
    t1_alt = atan2(-s_t1, c_t1) + theta;
    joint_angles = [t1, t2];
end